export ZSH_DISABLE_COMPFIX=true
# FZF
export FZF_BASE='~/.fzf/bin/bin'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# Use ripgrep as FZF's default search in order to respect .gitignore
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow'

# Powerlevel 9k bar config
POWERLEVEL9K_MODE='nerdfont-complete'

# Enable enable reverse search in zsh
bindkey -v
bindkey '^R' history-incremental-search-backward

# Load local zshrc
[[ -f $HOME/.zshrc_local ]] && source $HOME/.zshrc_local

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.

HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE
# remove older duplicate entries from history
setopt hist_ignore_all_dups
# remove superfluous blanks from history items
setopt hist_reduce_blanks
# save history entries as soon as they are entered
setopt inc_append_history
# share history between different instances of the shell
setopt share_history
# cd by typing directory name if it's not a command
setopt auto_cd
# autocorrect commands
setopt correct_all
# automatically list choices on ambiguous completion
setopt auto_list
# automatically use menu completion
setopt auto_menu
# move cursor to end if word had one match
setopt always_to_end
zstyle ':completion:*' menu select # select completions with arrow keys
zstyle ':completion:*' group-name '' # group results by category
zstyle ':completion:::::' completer _expand _complete _ignored _approximate # enable approximate matches for completion
export ZSH=$HOME/.oh-my-zsh


# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel9k/powerlevel9k"

plugins=(git elixir fzf zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh
# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
#########################  OLD ZPROFILE ########################################
# -*- mode: shell-script; -*-
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/bin"

# Load direnv
eval "$(direnv hook zsh)"

# Load asdf
autoload -Uz compinit
compinit
. $HOME/.asdf/asdf.sh
. $HOME/.asdf/completions/asdf.bash

# Load ssh keys
# eval "$(ssh-agent -s)"
# ssh-add ~/.ssh/*_rsa

# .zshrc_local is meant to keep private configurations, it is out of version
# management.
[[ -f $HOME/.zprofile_local ]] && source $HOME/.zprofile_local

# # Ask kitty to use config from ~/.config (even on MacOS)
export KITTY_CONFIG_DIRECTORY="$HOME/.config/kitty"
#########################  OLD ZPROFILE ########################################
#LOCALE
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

export EDITOR='nvr'
export VISUAL=$EDITOR

export VIMCONFIG=~/.config/$EDITOR
export VIMDATA=~/.local/share/$EDITOR
# aliases
#git branch -l | peco | xargs git checkout
alias gbr="git branch | grep -v "master" | xargs git branch -D"
alias vim=$EDITOR
alias vi=$EDITOR
alias e=$EDITOR
alias zshconfig="e ~/.zshrc"
alias ohmyzsh="e ~/.oh-my-zsh"
alias dockerbash="docker ps --format '{{.ID}}: {{.Image}} {{.Names}}' | peco | sed 's/: .*//g' | xargs -I{} -ot docker exec -ti {} /bin/bash"
